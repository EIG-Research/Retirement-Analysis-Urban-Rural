knitr::opts_chunk$set(echo = TRUE)
# remove dependencies
rm(list = ls())
# load packages
library(dplyr)
library(survey)
library(survey)
library(batman)
library(batman)
library(ggplot2)
# set user path
project_directories <- list(
"sarah" = "/Users/sarah/Documents/GitHub/Retirement-Analysis-Urban-Rural"
)
# set user path
project_directories <- list(
"sarah" = "/Users/sarah/Documents/GitHub/Retirement-Analysis-Urban-Rural"
)
current_user <- Sys.info()[["user"]]
if (!current_user %in% names(project_directories)) {
stop("Root folder for current user is not defined.")
}
# set project paths
project_path = project_directories[[current_user]]
data_path = file.path(project_path, "Data")
output_path = file.path(project_path, "Output")
# Read in wrangled SIPP data (see 1. wrangle SIPP 2023.R)
load(paste(output_path, "SIPP_2023_WRANGLED.RData", sep = "/"))
# convert access, participation, and matching to bools
sipp_2023 = sipp_2023 %>%
mutate(ANY_RETIREMENT_ACCESS_bool = case_when(
ANY_RETIREMENT_ACCESS == "Yes" ~ 1,
ANY_RETIREMENT_ACCESS == "No" ~ 0
),
PARTICIPATING_bool = case_when(
PARTICIPATING == "Yes" ~ 1,
PARTICIPATING == "No" ~ 0
),
MATCHING_bool = case_when(
MATCHING == "Yes" ~ 1,
MATCHING == "No" ~ 0
))
metro_ind_access = sipp_2023 %>% count(METRO_STATUS, INDUSTRY_BROAD,
ANY_RETIREMENT_ACCESS)  %>%
filter(METRO_STATUS != "Not identified") %>% filter(!is.na(METRO_STATUS))
# how many are under 30?
count(metro_ind_access %>% filter(n<30))
# what do we exclude?
metro_ind_access_nu30 = metro_ind_access %>% filter(n<30)
unique(metro_ind_access_nu30$INDUSTRY_BROAD)
# what do we exclude?
metro_ind_access_nu30 = metro_ind_access %>% filter(n<30)
unique(metro_ind_access_nu30$INDUSTRY_BROAD)
excl = unique(metro_ind_access_nu30$INDUSTRY_BROAD)
# if we exclude unreliable industries, what does this leave us with?
metro_ind_access_n30 = metro_ind_access %>%
filter(!(INDUSTRY_BROAD %in% excl)) %>%
unique(metro_ind_access_n30$INDUSTRY_BROAD)
# if we exclude unreliable industries, what does this leave us with?
metro_ind_access_n30 = metro_ind_access %>%
filter(!(INDUSTRY_BROAD %in% excl))
unique(metro_ind_access_n30$INDUSTRY_BROAD)
incl =  unique(metro_ind_access_n30$INDUSTRY_BROAD)
unique(metro_ind_access_n30$INDUSTRY_BROAD)
